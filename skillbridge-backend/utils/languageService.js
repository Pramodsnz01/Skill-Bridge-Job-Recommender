// Multi-language support service
const supportedLanguages = {
  en: {
    name: 'English',
    code: 'en',
    flag: 'üá∫üá∏'
  },
  ne: {
    name: '‡§®‡•á‡§™‡§æ‡§≤‡•Ä',
    code: 'ne',
    flag: 'üá≥üáµ'
  },
  hi: {
    name: '‡§π‡§ø‡§Ç‡§¶‡•Ä',
    code: 'hi',
    flag: 'üáÆüá≥'
  },
  es: {
    name: 'Espa√±ol',
    code: 'es',
    flag: 'üá™üá∏'
  },
  fr: {
    name: 'Fran√ßais',
    code: 'fr',
    flag: 'üá´üá∑'
  }
};

// Translation cache for performance
const translationCache = new Map();

// Common phrases translations
const translations = {
  // Greetings
  greetings: {
    en: "Hello! I'm SkillBridge AI, your career development assistant. How can I help you today?",
    ne: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ SkillBridge AI ‡§π‡•Å‡§Å, ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§Æ ‡§Ü‡§ú ‡§§‡§™‡§æ‡§à‡§Ç‡§≤‡§æ‡§à ‡§ï‡§∏‡§∞‡•Ä ‡§Æ‡§¶‡•ç‡§¶‡§§ ‡§ó‡§∞‡•ç‡§® ‡§∏‡§ï‡•ç‡§õ‡•Å?",
    hi: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç SkillBridge AI ‡§π‡•Ç‡§Ç, ‡§Ü‡§™‡§ï‡§æ ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§ú ‡§Ü‡§™‡§ï‡•Ä ‡§ï‡•à‡§∏‡•á ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç?",
    es: "¬°Hola! Soy SkillBridge AI, tu asistente de desarrollo profesional. ¬øC√≥mo puedo ayudarte hoy?",
    fr: "Bonjour! Je suis SkillBridge AI, votre assistant de d√©veloppement de carri√®re. Comment puis-je vous aider aujourd'hui?"
  },
  
  // Identity
  identity: {
    en: "Hello! I'm SkillBridge AI, your personal career assistant. I'm here to help you with career guidance, resume tips, interview preparation, and professional development.",
    ne: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ SkillBridge AI ‡§π‡•Å‡§Å, ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§Æ ‡§§‡§™‡§æ‡§à‡§Ç‡§≤‡§æ‡§à ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§®, ‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Å‡§Æ‡•á ‡§∏‡•Å‡§ù‡§æ‡§µ, ‡§∏‡§æ‡§ï‡•ç‡§∑‡§æ‡§§‡•ç‡§ï‡§æ‡§∞ ‡§§‡§Ø‡§æ‡§∞‡•Ä ‡§∞ ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§∏‡§æ‡§Ø‡§ø‡§ï ‡§µ‡§ø‡§ï‡§æ‡§∏‡§Æ‡§æ ‡§Æ‡§¶‡•ç‡§¶‡§§ ‡§ó‡§∞‡•ç‡§® ‡§Ø‡§π‡§æ‡§Å ‡§õ‡•Å‡•§",
    hi: "‡§®‡§Æ‡§∏‡•ç‡§§‡•á! ‡§Æ‡•à‡§Ç SkillBridge AI ‡§π‡•Ç‡§Ç, ‡§Ü‡§™‡§ï‡§æ ‡§µ‡•ç‡§Ø‡§ï‡•ç‡§§‡§ø‡§ó‡§§ ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§∏‡§π‡§æ‡§Ø‡§ï‡•§ ‡§Æ‡•à‡§Ç ‡§Ü‡§™‡§ï‡•ã ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§Æ‡§æ‡§∞‡•ç‡§ó‡§¶‡§∞‡•ç‡§∂‡§®, ‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ‡•á ‡§ü‡§ø‡§™‡•ç‡§∏, ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§§‡•à‡§Ø‡§æ‡§∞‡•Ä ‡§î‡§∞ ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§∏‡§æ‡§Ø‡§ø‡§ï ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π‡§æ‡§Ç ‡§π‡•Ç‡§Ç‡•§",
    es: "¬°Hola! Soy SkillBridge AI, tu asistente de carrera personal. Estoy aqu√≠ para ayudarte con orientaci√≥n profesional, consejos de curr√≠culum, preparaci√≥n de entrevistas y desarrollo profesional.",
    fr: "Bonjour! Je suis SkillBridge AI, votre assistant de carri√®re personnel. Je suis ici pour vous aider avec l'orientation de carri√®re, les conseils de CV, la pr√©paration aux entretiens et le d√©veloppement professionnel."
  },
  
  // Resume
  resume: {
    en: "A resume is a professional document that summarizes your work experience, education, skills, and achievements. It's your first impression to potential employers.",
    ne: "‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Å‡§Æ‡•á ‡§≠‡§®‡•á‡§ï‡•ã ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§∏‡§æ‡§Ø‡§ø‡§ï ‡§ï‡§æ‡§ó‡§ú‡§æ‡§§ ‡§π‡•ã ‡§ú‡§∏‡§≤‡•á ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§ï‡§æ‡§Æ‡§ï‡•ã ‡§Ö‡§®‡•Å‡§≠‡§µ, ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ, ‡§∏‡•Ä‡§™ ‡§∞ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§π‡§∞‡•Ç ‡§∏‡§Ç‡§ï‡•ç‡§∑‡•á‡§™‡§Æ‡§æ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§ ‡§ó‡§∞‡•ç‡§¶‡§õ‡•§ ‡§Ø‡•ã ‡§∏‡§Æ‡•ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§®‡§ø‡§Ø‡•ã‡§ï‡•ç‡§§‡§æ‡§π‡§∞‡•Ç‡§≤‡§æ‡§à ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§™‡§π‡§ø‡§≤‡•ã ‡§õ‡§æ‡§™ ‡§π‡•ã‡•§",
    hi: "‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ‡•á ‡§è‡§ï ‡§µ‡•ç‡§Ø‡§æ‡§µ‡§∏‡§æ‡§Ø‡§ø‡§ï ‡§¶‡§∏‡•ç‡§§‡§æ‡§µ‡•á‡§ú ‡§π‡•à ‡§ú‡•ã ‡§Ü‡§™‡§ï‡•á ‡§ï‡§æ‡§∞‡•ç‡§Ø ‡§Ö‡§®‡•Å‡§≠‡§µ, ‡§∂‡§ø‡§ï‡•ç‡§∑‡§æ, ‡§ï‡•å‡§∂‡§≤ ‡§î‡§∞ ‡§â‡§™‡§≤‡§¨‡•ç‡§ß‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§∏‡§æ‡§∞‡§æ‡§Ç‡§∂ ‡§™‡•ç‡§∞‡§∏‡•ç‡§§‡•Å‡§§ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à‡•§ ‡§Ø‡§π ‡§∏‡§Ç‡§≠‡§æ‡§µ‡§ø‡§§ ‡§®‡§ø‡§Ø‡•ã‡§ï‡•ç‡§§‡§æ‡§ì‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ü‡§™‡§ï‡§æ ‡§™‡§π‡§≤‡§æ ‡§™‡•ç‡§∞‡§≠‡§æ‡§µ ‡§π‡•à‡•§",
    es: "Un curr√≠culum es un documento profesional que resume tu experiencia laboral, educaci√≥n, habilidades y logros. Es tu primera impresi√≥n para posibles empleadores.",
    fr: "Un CV est un document professionnel qui r√©sume votre exp√©rience de travail, votre √©ducation, vos comp√©tences et vos r√©alisations. C'est votre premi√®re impression aupr√®s des employeurs potentiels."
  },
  
  // Help
  help: {
    en: "I'm here to help! I can assist with: resume writing, career advice, interview prep, job search strategies, skills development, networking, and more.",
    ne: "‡§Æ ‡§Æ‡§¶‡•ç‡§¶‡§§ ‡§ó‡§∞‡•ç‡§® ‡§Ø‡§π‡§æ‡§Å ‡§õ‡•Å! ‡§Æ ‡§∏‡§π‡§Ø‡•ã‡§ó ‡§ó‡§∞‡•ç‡§® ‡§∏‡§ï‡•ç‡§õ‡•Å: ‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Å‡§Æ‡•á ‡§≤‡•á‡§ñ‡§®, ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§∏‡§≤‡•ç‡§≤‡§æ‡§π, ‡§∏‡§æ‡§ï‡•ç‡§∑‡§æ‡§§‡•ç‡§ï‡§æ‡§∞ ‡§§‡§Ø‡§æ‡§∞‡•Ä, ‡§®‡•ã‡§ï‡§∞‡•Ä ‡§ñ‡•ã‡§ú ‡§∞‡§£‡§®‡•Ä‡§§‡§ø‡§π‡§∞‡•Ç, ‡§∏‡•Ä‡§™ ‡§µ‡§ø‡§ï‡§æ‡§∏, ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï‡§ø‡§ô ‡§∞ ‡§•‡§™‡•§",
    hi: "‡§Æ‡•à‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ø‡§π‡§æ‡§Ç ‡§π‡•Ç‡§Ç! ‡§Æ‡•à‡§Ç ‡§∏‡§π‡§æ‡§Ø‡§§‡§æ ‡§ï‡§∞ ‡§∏‡§ï‡§§‡§æ ‡§π‡•Ç‡§Ç: ‡§∞‡§ø‡§ú‡•ç‡§Ø‡•Ç‡§Æ‡•á ‡§≤‡•á‡§ñ‡§®, ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§∏‡§≤‡§æ‡§π, ‡§á‡§Ç‡§ü‡§∞‡§µ‡•ç‡§Ø‡•Ç ‡§§‡•à‡§Ø‡§æ‡§∞‡•Ä, ‡§®‡•å‡§ï‡§∞‡•Ä ‡§ñ‡•ã‡§ú ‡§∞‡§£‡§®‡•Ä‡§§‡§ø‡§Ø‡§æ‡§Ç, ‡§ï‡•å‡§∂‡§≤ ‡§µ‡§ø‡§ï‡§æ‡§∏, ‡§®‡•á‡§ü‡§µ‡§∞‡•ç‡§ï‡§ø‡§Ç‡§ó ‡§î‡§∞ ‡§Ö‡§ß‡§ø‡§ï‡•§",
    es: "¬°Estoy aqu√≠ para ayudar! Puedo ayudarte con: escritura de curr√≠culum, consejos de carrera, preparaci√≥n de entrevistas, estrategias de b√∫squeda de empleo, desarrollo de habilidades, networking y m√°s.",
    fr: "Je suis l√† pour vous aider! Je peux vous aider avec: la r√©daction de CV, les conseils de carri√®re, la pr√©paration aux entretiens, les strat√©gies de recherche d'emploi, le d√©veloppement des comp√©tences, le r√©seautage et plus encore."
  },
  
  // Thank you
  thanks: {
    en: "You're very welcome! I'm glad I could help. Is there anything else you'd like to know about your career development?",
    ne: "‡§§‡§™‡§æ‡§à‡§Ç‡§≤‡§æ‡§à ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§õ! ‡§Æ ‡§ñ‡•Å‡§∏‡•Ä ‡§õ‡•Å ‡§ï‡§ø ‡§Æ ‡§Æ‡§¶‡•ç‡§¶‡§§ ‡§ó‡§∞‡•ç‡§® ‡§∏‡§ï‡•á‡§Ç‡•§ ‡§§‡§™‡§æ‡§à‡§Ç‡§ï‡•ã ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏‡§ï‡•ã ‡§¨‡§æ‡§∞‡•á‡§Æ‡§æ ‡§Ö‡§∞‡•Ç ‡§ï‡•á‡§π‡•Ä ‡§ú‡§æ‡§®‡•ç‡§® ‡§ö‡§æ‡§π‡§®‡•Å‡§π‡•Å‡§®‡•ç‡§õ?",
    hi: "‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! ‡§Æ‡•Å‡§ù‡•á ‡§ñ‡•Å‡§∂‡•Ä ‡§π‡•à ‡§ï‡§ø ‡§Æ‡•à‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞ ‡§∏‡§ï‡§æ‡•§ ‡§ï‡•ç‡§Ø‡§æ ‡§Ü‡§™ ‡§Ö‡§™‡§®‡•á ‡§ï‡§∞‡§ø‡§Ø‡§∞ ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç ‡§ï‡•Å‡§õ ‡§î‡§∞ ‡§ú‡§æ‡§®‡§®‡§æ ‡§ö‡§æ‡§π‡§§‡•á ‡§π‡•à‡§Ç?",
    es: "¬°De nada! Me alegra haber podido ayudar. ¬øHay algo m√°s que te gustar√≠a saber sobre tu desarrollo profesional?",
    fr: "Je vous en prie! Je suis ravi d'avoir pu vous aider. Y a-t-il autre chose que vous aimeriez savoir sur votre d√©veloppement de carri√®re?"
  }
};

class LanguageService {
  constructor() {
    this.supportedLanguages = supportedLanguages;
    this.translations = translations;
    this.cache = translationCache;
  }

  // Detect language from text
  detectLanguage(text) {
    const nepaliPattern = /[\u0900-\u097F]/;
    const hindiPattern = /[\u0900-\u097F]/;
    const spanishPattern = /[√°√©√≠√≥√∫√±√º]/i;
    const frenchPattern = /[√†√¢√§√©√®√™√´√Ø√Æ√¥√∂√π√ª√º√ø√ß]/i;

    if (nepaliPattern.test(text)) return 'ne';
    if (hindiPattern.test(text)) return 'hi';
    if (spanishPattern.test(text)) return 'es';
    if (frenchPattern.test(text)) return 'fr';
    
    return 'en'; // Default to English
  }

  // Translate text to target language
  translateText(text, targetLanguage, sourceLanguage = 'en') {
    if (targetLanguage === sourceLanguage) return text;

    const cacheKey = `${text}_${sourceLanguage}_${targetLanguage}`;
    if (this.cache.has(cacheKey)) {
      return this.cache.get(cacheKey);
    }

    // For now, return common phrases or original text
    // In production, integrate with Google Translate API or similar
    const translatedText = this.getCommonTranslation(text, targetLanguage) || text;
    
    this.cache.set(cacheKey, translatedText);
    return translatedText;
  }

  // Get common translation for known phrases
  getCommonTranslation(text, targetLanguage) {
    const lowerText = text.toLowerCase();
    
    // Check greetings
    if (lowerText.includes('hello') || lowerText.includes('hi')) {
      return this.translations.greetings[targetLanguage] || this.translations.greetings.en;
    }
    
    // Check identity questions
    if (lowerText.includes('what is your name') || lowerText.includes('who are you')) {
      return this.translations.identity[targetLanguage] || this.translations.identity.en;
    }
    
    // Check resume questions
    if (lowerText.includes('what is resume') || lowerText.includes('what is cv')) {
      return this.translations.resume[targetLanguage] || this.translations.resume.en;
    }
    
    // Check help requests
    if (lowerText.includes('help')) {
      return this.translations.help[targetLanguage] || this.translations.help.en;
    }
    
    // Check thank you
    if (lowerText.includes('thank you') || lowerText.includes('thanks')) {
      return this.translations.thanks[targetLanguage] || this.translations.thanks.en;
    }
    
    return null;
  }

  // Get supported languages
  getSupportedLanguages() {
    return this.supportedLanguages;
  }

  // Check if language is supported
  isLanguageSupported(languageCode) {
    return Object.keys(this.supportedLanguages).includes(languageCode);
  }

  // Get language info
  getLanguageInfo(languageCode) {
    return this.supportedLanguages[languageCode] || this.supportedLanguages.en;
  }

  // Clear cache for performance
  clearCache() {
    this.cache.clear();
  }

  // Get cache size for monitoring
  getCacheSize() {
    return this.cache.size;
  }

  // Format response with language support
  formatResponse(response, userLanguage = 'en') {
    if (userLanguage === 'en') {
      return response;
    }

    return {
      ...response,
      message: this.translateText(response.message, userLanguage),
      suggestions: response.suggestions?.map(suggestion => 
        this.translateText(suggestion, userLanguage)
      ) || [],
      originalMessage: response.message, // Keep original for reference
      translated: true
    };
  }
}

// Create singleton instance
const languageService = new LanguageService();

module.exports = languageService; 